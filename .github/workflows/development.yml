name: development

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-deps.outputs.cache-hit }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Cache Node Modules
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: npm ci

  linting:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Restore Cached Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Run ESLint
        run: npm run lint:fix

  testing:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Restore Cached Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Run Unit Tests
        run: npm run test

  build-app:
    runs-on: ubuntu-latest
    needs: [linting, testing]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Restore Cached Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Deploy App to Netlify
        run: |
          npx netlify-cli deploy --build --prod --message "Deploy App ${GITHUB_REF_NAME}"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_APP_SITE_ID }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

  build-docs:
    runs-on: ubuntu-latest
    needs: [linting, testing]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Restore Cached Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Build Storybook Docs
        run: npm run build-storybook-docs

      - name: Deploy Storybook Docs to Netlify
        run: |
          npx netlify-cli deploy --prod --dir=storybook-static --message "Deploy Storybook Docs ${GITHUB_REF_NAME}"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_STORYBOOK_SITE_ID }}
